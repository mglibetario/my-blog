{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ArticlesList.js","pages/article-content.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","NavBar.js","App.js","index.js"],"names":["HomePage","AboutPage","ArticlesList","articles","map","article","key","className","to","name","title","content","substring","ArticlesListPage","articleContent","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","NavBar","App","path","component","exact","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7daa2b39.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n<>\n    <h1>Hello World!</h1>\n    <p>\n        Welcome!\n        I have been in the industry for 9 years. I worked as a Lotus Notes\n        Developer, catering to off-shore or remote clients. Recently, I have been\n        focusing on React, Node.js, and MongoDB.\n    </p>\n    <p>\n        Ich bin seit 9 Jahren in der Branche. Ich habe als Lotus Notes gearbeitet\n        Entwickler für Offshore- oder Remote-Kunden. Vor kurzem war ichmit \n        Schwerpunkt auf React, Node.js und MongoDB.\n\n    </p>\n    <p>\n        私はこの業界に9年間携わっています。私はロータスノーツとして働いていました\n        開発者、オフショアまたはリモートクライアントに対応。最近、私は\n        React、Node.js、MongoDBに焦点を当てています。\n    </p>\n</>\n)\nexport default HomePage;","import React from 'react';\n\nconst AboutPage = () => (\n<>\n    <h1>Professional Experience</h1>\n    <p>\n        I have been in the industry for 9 years. I worked as a Lotus Notes\n        Developer, catering to off-shore or remote clients. Recently, I have been\n        focusing on React, Node.js, and MongoDB.\n    </p>\n    <p>\n        Ich bin seit 9 Jahren in der Branche. Ich habe als Lotus Notes gearbeitet\n        Entwickler für Offshore- oder Remote-Kunden. Vor kurzem war ichmit \n        Schwerpunkt auf React, Node.js und MongoDB.\n    </p>\n    <p>\n        私はこの業界に9年間携わっています。私はロータスノーツとして働いていました\n        開発者、オフショアまたはリモートクライアントに対応。最近、私は\n        React、Node.js、MongoDBに焦点を当てています。\n    </p>\n</>\n)\nexport default AboutPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticlesList = ({ articles }) => (\n    <>\n    {articles.map((article, key) => (\n        <Link className=\"article-list-item\" key={key} to={`/article/${article.name}`}>\n           <h3>{article.title}</h3>\n           <p>{article.content[0].substring(0, 150)}....</p>\n        </Link>\n     \n    ))}\n    </>\n)\n\n\nexport default ArticlesList;","const articles = [\n    {\n        name: 'react',\n        title: 'React - Declarative, Component-Based, and Learn Once, Write Anywhere',\n        content: [\n            `React makes it painless to create interactive UIs. Design simple views for each \n            state in your application, and React will efficiently update and render just the \n            right components when your data changes. Declarative views make your code more \n            predictable and easier to debug.`,\n            `Erstellen Sie gekapselte Komponenten, die ihren eigenen Status verwalten.\n            Verfassen Sie sie dann zu komplexen Benutzeroberflächen.\n            Da die Komponentenlogik in JavaScript anstelle von Vorlagen geschrieben ist,\n            Sie können problemlos umfangreiche Daten über Ihre App übertragen und \n            den Status aus dem DOM heraushalten.`,\n            `Wir machen keine Annahmen über den Rest Ihres Technologie-Stacks.\n            So können Sie in React neue Funktionen entwickeln, ohne vorhandenen Code neu schreiben zu müssen.\n            React kann auch mithilfe von Node auf dem Server gerendert und \n            mobile Apps mithilfe von React Native mit Strom versorgt werden.`,\n        ]\n    },    {\n        name: 'node',\n        title: 'Node.js - An Asynchronous Event-Driven JavaScript Runtime',\n        content: [\n            `Node. js is primarily used for non-blocking, event-driven servers, \n            due to its single-threaded nature. It's used for traditional web sites \n            and back-end API services, but was designed with real-time, push-based architectures in mind`,\n            `Als asynchrone ereignisgesteuerte JavaScript-Laufzeit\n            Node.js wurde entwickelt, um skalierbare Netzwerkanwendungen zu erstellen`,\n            `Knoten. js wird hauptsächlich für nicht blockierende, ereignisgesteuerte Server verwendet.\n            aufgrund seiner Single-Threaded-Natur. \n            Es wird für traditionelle Websites verwendet\n            und Back-End-API-Dienste, wurde jedoch unter Berücksichtigung \n            von Push-basierten Echtzeitarchitekturen entwickelt \",\n            Als asynchrone ereignisgesteuerte JavaScript-Laufzeit.`,\n        ]\n    },     {\n        name: 'mongodb',\n        title: 'MongoDB - The Database For Modern Applications',\n        content: [\n            `MongoDB is a general purpose, document-based, distributed database built for modern application\n            developers and for the cloud era.`,\n            `Ideal für Transaktionsgeschäfte, bei denen die Leistung eine Rolle spielt. Es ist auch großartig, \n            wenn sich die Datenstruktur im Laufe der Zeit weiterentwickelt, \n            da Sie mit den schemalosen Vorgängen die Daten im laufenden Betrieb aktualisieren können.`,\n            `Eine dokumentorientierte Datenbank, in der Daten in JSON-ähnlichen Dokumenten mit \n            dynamischem Schema gespeichert werden. Dies bedeutet, dass Sie Ihre Datensätze speichern können, \n            ohne sich um die Datenstruktur wie die Anzahl der Felder oder Feldtypen zum Speichern von Werten kümmern zu müssen. \n            MongoDB-Dokumente ähneln JSON-Objekten.`,\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport articleContent from './article-content';\n\nconst ArticlesListPage = () => (\n<>\n    <h1>Articles</h1>\n    <ArticlesList articles={articleContent} />\n</>\n)\nexport default ArticlesListPage;","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404 Page Not Found!</h1>\n)\n\nexport default NotFoundPage;","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n    <>\n    <h3>Comments:</h3>\n    { comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n    ))}\n    </>\n)\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo}) => {\n    const upvoteArticle = async () => {\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n    }\n    return (\n    <div id=\"upvotes-section\">\n        <button onClick={() => upvoteArticle()}> Upvote! </button>\n        <p>This post has been upvoted {upvotes} times</p>\n\n    </div>\n    );\n}\n\n\nexport default UpvotesSection;","import React, {useState} from 'react';\n\n\nconst AddCommentForm = ({articleName, setArticleInfo}) => {\n    \n    const[username, setUsername] = useState('');\n    const[commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/articles/${articleName}/add-comment`,\n        {\n            method: 'post',\n            body: JSON.stringify({username, text: commentText}),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        );\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return (\n    <div id=\"add-comment-form\">\n        <h3>Add a Comment</h3>\n        <label>\n            Name:\n            <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n        </label>\n        <label>\n            Comment:\n            <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\n        </label>\n    \n    <button onClick={() => addComment()}>Comment</button>\n\n    </div>\n    \n    );\n}\nexport default AddCommentForm;","import React, { useState, useEffect } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport articleContent from './article-content';\nimport NotFoundPage from './NotFoundPage';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\n\nconst ArticlePage = ({ match }) => {\n\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n \n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/articles/${name}`); // Added \"proxy\" in package.json file\n            const body = await result.json();\n            \n            setArticleInfo(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if (!article) return <NotFoundPage />\n\n    const otherArticles = articleContent.filter(article => article.name !== name)\n;\n    return (\n        <>\n            <h1>{article.title}</h1>\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n            {article.content.map((paragraph, key) => (\n                <p key={key}>{paragraph}</p>\n            ))}\n            <CommentsList comments={articleInfo.comments} />\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo}/>\n\n            <h3>Other Articles</h3>\n            <ArticlesList articles={otherArticles} />\n        </>\n    );\n\n}\nexport default ArticlePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/articles-list\">Articles</Link>\n            </li>\n        </ul>\n    </nav>\n)\n\nexport default NavBar;","import './App.css';\nimport React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NavBar from './NavBar';\nimport NotFoundPage from './pages/NotFoundPage';\n//import ApptsPage from './pages/ApptsPage/ApptsPage'\n//import TodoApp from './pages/ProductivityPage/ProdPage';\n//import TaskManagerPage from './pages/ProductivityPage/TaskManagerPage';\n//import LandingPage from './pages/LandingPage';\n\nclass App extends Component {\n  \n  render() {\n  \n    return (\n      <Router>\n        <div className=\"App\">\n        <NavBar />\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/about\" component={AboutPage} exact />\n              <Route path=\"/articles-list\" component={ArticlesListPage} exact />\n              <Route path=\"/article/:name\" component={ArticlePage} exact />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n\n      </Router>\n      \n    );\n\n  }\n  \n}\n\nexport default App;\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}